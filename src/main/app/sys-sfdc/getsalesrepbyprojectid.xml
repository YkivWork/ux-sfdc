<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc"
	xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd">
    <flow name="GET_SALES_REP_BY_PROJECT_ID" processingStrategy="synchronous">
        <vm:inbound-endpoint exchange-pattern="request-response" path="VM_GET_SALES_REP_BY_ID" connector-ref="VM_IN_MEMORY" doc:name="VM_GET_SALES_REP_BY_PROJECT_ID"/>
        <logger message="Flow: #[flow.name] Action=Started Payload=#[message.payloadAs(java.lang.String)]" level="DEBUG" category="com.merrillcorp.logging" doc:name="Log Payload"/>
        <dw:transform-message doc:name="Transform to Java Object">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
        </dw:transform-message>
        <set-variable variableName="projectId" value="#[payload.projectId]" doc:name="Flow Var Project Id"/>
        <vm:outbound-endpoint exchange-pattern="request-response" path="VM_GET_OPPORTUNITY_SPLIT_BY_PROJECT_ID" connector-ref="VM_IN_MEMORY" doc:name="VM_GET_OPPORTUNITY_SPLIT_BY_PROJECT_ID"/>
        <vm:outbound-endpoint exchange-pattern="request-response" path="VM_GET_USER_IDS" connector-ref="VM_IN_MEMORY" doc:name="VM_GET_USER_IDS"/>
        <vm:outbound-endpoint exchange-pattern="request-response" path="VM_GET_OPPORTUNITY_SPLITS_BY_USER_IDS" connector-ref="VM_IN_MEMORY" doc:name="VM_GET_OPPORTUNITY_SPLITS_BY_USER_IDS"/>
        <dw:transform-message doc:name="Transform to Java Object">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload ]]></dw:set-payload>
        </dw:transform-message>
        <set-variable variableName="opportunitySplits" value="#[payload]" doc:name="Flow Var Opportunity Splits"/>
        <dw:transform-message doc:name="Transform Final Payload">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
flowVars.opportunitySplits map
  using (ownerId = $.ownerId)
  using(theUser = (flowVars.users filter $.id == ownerId)[0])
{
  isPrimary: $.isPrimary,
  splitPercentage: $.splitPercentage,
  employeeNumber: theUser.employeeNumber,
  name: theUser.name
}
]]></dw:set-payload>
        </dw:transform-message>
        <json:object-to-json-transformer mimeType="application/json" doc:name="Object to JSON"/>
        <catch-exception-strategy doc:name="Catch Exception Strategy">
            <logger message="#[exception.getSummaryMessage()]" level="ERROR" category="com.merrillcorp.logging" doc:name="Log Exception"/>
            <set-payload value="Unable to retrieve Sales Rep by Project Id: #[flowVars.projectId]" doc:name="Set Payload"/>
            <set-property propertyName="http.status" value="#[400]" doc:name="400"/>
        </catch-exception-strategy>
    </flow>
    <flow name="getSalesRepsByProjectId" processingStrategy="synchronous">
        <logger message="Flow: #[flow.name] Action=Started Payload=#[payload]" level="DEBUG" doc:name="Logger" category="com.merrillcorp.logging"/>
        <sfdc:query config-ref="Salesforce__Basic_Authentication" query="SELECT Id, Primary__c, Split__c, UserId FROM OpportunityTeamMember WHERE OutputCommissionFlag__c = true 
 and OpportunityId in (SELECT Opportunity__c FROM DatasiteOne_Project__c where Id = '#[payload.projectId]')" doc:name="Salesforce OpportunitySplit"/>
<!--
Down below in the final transform, a "filter" is used in DW. If you do not consume the ConsumingIterator returned from sfdc,
then the filter works only on the first one and nothing else. Hence for these transforms.
-->
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map {
 isPrimary: $.Primary__c,
 splitPercentage: $.Split__c,
 ownerId: $.UserId
}
]]></dw:set-payload>
        </dw:transform-message>
        <set-variable variableName="opportunitySplits" value="#[payload]" doc:name="Variable"/>

        <dw:transform-message doc:name="Transform Message">
            <dw:set-variable variableName="userIds"><![CDATA[%dw 1.0
%output application/java
---
payload map ( "'" ++ $.ownerId ++ "'" ) joinBy ","
]]></dw:set-variable>
        </dw:transform-message>

        <logger message="Looking up SalesReps: #[flowVars.userIds]" level="INFO" category="com.merrillcorp.logging" doc:name="Logger"/>
        
        <sfdc:query config-ref="Salesforce__Basic_Authentication" query="SELECT EmployeeNumber,Name,Id FROM User WHERE Id in (#[flowVars.userIds])" doc:name="Salesforce OpportunitySplit"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map {
 name: $.Name,
 id: $.Id,
 employeeNumber: $.EmployeeNumber
}
]]></dw:set-payload>
        </dw:transform-message>
        <set-variable variableName="users" value="#[payload]" doc:name="Variable"/>

        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
flowVars.opportunitySplits map
  using (ownerId = $.ownerId)
  using(theUser = (flowVars.users filter $.id == ownerId)[0])
{
  isPrimary: $.isPrimary,
  splitPercentage: $.splitPercentage,
  employeeNumber: theUser.employeeNumber,
  name: theUser.name
}
]]></dw:set-payload>
        </dw:transform-message>

        <logger message="Done Looking up sales rep. #[message.payloadAs(java.lang.String)]" level="INFO" doc:name="Logger"/>
        <catch-exception-strategy doc:name="Catch Exception Strategy">
            <logger message="Flow: #[flow.name] Action=LogExceptionSummary ExceptionSummary=#[exception.getSummaryMessage()]" level="ERROR" category="com.merrillcorp.logging" doc:name="Log Exception Strategy"/>
        </catch-exception-strategy>
    </flow>
</mule>
